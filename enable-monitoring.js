// Script para habilitar/deshabilitar el m√≥dulo de monitoreo
// Ejecutar en la consola del navegador (F12)

console.log('üîç UTALK MONITORING CONTROL v2.0');
console.log('=================================');

// Configuraci√≥n
const MONITORING_KEY = 'utalk_monitoring_enabled';

// Funci√≥n para habilitar monitoreo
window.enableMonitoring = function() {
  localStorage.setItem(MONITORING_KEY, 'true');
  console.log('‚úÖ Monitoreo habilitado. Recarga la p√°gina para ver la burbuja de monitoreo.');
  console.log('üí° La burbuja aparecer√° en la esquina inferior derecha.');
  console.log('üéØ Haz clic en la burbuja para expandir el panel de monitoreo.');
};

// Funci√≥n para deshabilitar monitoreo
window.disableMonitoring = function() {
  localStorage.removeItem(MONITORING_KEY);
  console.log('‚ùå Monitoreo deshabilitado. Recarga la p√°gina para ocultar la burbuja.');
};

// Funci√≥n para verificar estado
window.checkMonitoring = function() {
  const isEnabled = localStorage.getItem(MONITORING_KEY) === 'true';
  const isDev = window.location.hostname === 'localhost' || 
                window.location.hostname.includes('dev') ||
                window.location.hostname.includes('127.0.0.1');
  
  console.log('üìä Estado del monitoreo:');
  console.log('- Habilitado manualmente:', isEnabled ? '‚úÖ' : '‚ùå');
  console.log('- Entorno de desarrollo:', isDev ? '‚úÖ' : '‚ùå');
  console.log('- Estado final:', (isEnabled || isDev) ? 'üü¢ ACTIVO' : 'üî¥ INACTIVO');
  
  if (!isEnabled && !isDev) {
    console.log('üí° Para activar en producci√≥n: enableMonitoring()');
  }
  
  return isEnabled || isDev;
};

// Funci√≥n para limpiar datos de monitoreo
window.clearMonitoringData = function() {
  window.dispatchEvent(new CustomEvent('monitoring:clear-data'));
  console.log('üßπ Datos de monitoreo limpiados.');
};

// Funci√≥n para exportar datos de monitoreo
window.exportMonitoringData = function(format = 'excel') {
  const validFormats = ['excel', 'csv', 'txt'];
  if (!validFormats.includes(format)) {
    console.warn(`‚ö†Ô∏è Formato "${format}" no v√°lido. Formatos disponibles:`, validFormats);
    return;
  }
  
  window.dispatchEvent(new CustomEvent('monitoring:export-data', { detail: { format } }));
  console.log(`üì§ Exportando datos de monitoreo en formato ${format}...`);
};

// Funci√≥n para configurar l√≠mites de datos
window.setMonitoringLimits = function(limits = {}) {
  const config = JSON.parse(localStorage.getItem('utalk_monitoring_config') || '{}');
  config.MAX_ENTRIES = { ...config.MAX_ENTRIES, ...limits };
  localStorage.setItem('utalk_monitoring_config', JSON.stringify(config));
  
  console.log('‚öôÔ∏è L√≠mites de monitoreo actualizados:', limits);
  console.log('üîÑ Recarga la p√°gina para aplicar los cambios.');
};

// Funci√≥n para ver estad√≠sticas r√°pidas
window.getMonitoringStats = function() {
  const bubble = document.querySelector('[class*="monitoring-bubble"]');
  if (!bubble) {
    console.log('‚ùå El monitoreo no est√° activo o visible.');
    return null;
  }
  
  console.log('üìà Para ver estad√≠sticas detalladas, abre el panel de monitoreo.');
  console.log('üí° Haz clic en la burbuja flotante para expandir.');
};

// Funci√≥n para ayuda avanzada
window.monitoringHelp = function() {
  console.log('üÜò AYUDA DEL M√ìDULO DE MONITOREO');
  console.log('===============================');
  console.log('');
  console.log('üéØ COMANDOS B√ÅSICOS:');
  console.log('- enableMonitoring()         - Activar monitoreo');
  console.log('- disableMonitoring()        - Desactivar monitoreo');
  console.log('- checkMonitoring()          - Ver estado actual');
  console.log('');
  console.log('üìä DATOS Y EXPORTACI√ìN:');
  console.log('- clearMonitoringData()      - Limpiar todos los datos');
  console.log('- exportMonitoringData("excel") - Exportar a Excel');
  console.log('- exportMonitoringData("csv")   - Exportar a CSV');
  console.log('- exportMonitoringData("txt")   - Exportar a texto');
  console.log('');
  console.log('‚öôÔ∏è CONFIGURACI√ìN:');
  console.log('- setMonitoringLimits({apis: 500}) - Configurar l√≠mites');
  console.log('- getMonitoringStats()       - Ver estad√≠sticas r√°pidas');
  console.log('');
  console.log('üîç QU√â MONITOREA:');
  console.log('- APIs: Todas las peticiones HTTP (GET, POST, PUT, DELETE)');
  console.log('- WebSockets: Conexiones, eventos, mensajes');
  console.log('- Logs: console.log, info, warn, error');
  console.log('- Errores: JavaScript errors, React errors');
  console.log('- Rendimiento: Tiempos de carga, memoria');
  console.log('- Estados: Cambios en stores de Zustand');
  console.log('');
  console.log('üì± INTERFAZ:');
  console.log('- Burbuja flotante en esquina inferior derecha');
  console.log('- Arrastrable por toda la pantalla');
  console.log('- Panel expandible con pesta√±as');
  console.log('- Filtros y b√∫squeda en tiempo real');
  console.log('');
  console.log('üöÄ ¬°Listo para debuggear!');
};

// Mostrar comandos disponibles
console.log('üìã Comandos disponibles:');
console.log('- enableMonitoring()     - Habilitar monitoreo');
console.log('- disableMonitoring()    - Deshabilitar monitoreo'); 
console.log('- checkMonitoring()      - Verificar estado');
console.log('- monitoringHelp()       - Ver ayuda completa');
console.log('');

// Mostrar estado actual
const isActive = window.checkMonitoring();

if (isActive) {
  console.log('');
  console.log('üéâ ¬°El monitoreo est√° ACTIVO!');
  console.log('üëÄ Busca la burbuja flotante en la esquina inferior derecha.');
  console.log('üñ±Ô∏è Haz clic para expandir el panel de monitoreo.');
} else {
  console.log('');
  console.log('üí§ El monitoreo est√° INACTIVO.');
  console.log('üöÄ Ejecuta enableMonitoring() para activarlo.');
}

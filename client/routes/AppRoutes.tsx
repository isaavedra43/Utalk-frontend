import { Routes, Route, Navigate, useLocation } from "react-router-dom";
import { useEffect } from "react";
import { RequireAuth } from "@/components/RequireAuth";
import { logger } from "@/lib/utils";

// P√°ginas principales
import Index from "@/pages/Index";
import Login from "@/pages/Login";
import NotFound from "@/pages/NotFound";

// Componentes existentes
import { ExecutiveDashboard } from "@/components/ExecutiveDashboard";
import { CampaignModule } from "@/components/CampaignModule";
import { KnowledgeBase } from "@/components/KnowledgeBase";
import { SellerSettings } from "@/components/SellerSettings";

// Componentes placeholder para m√≥dulos en desarrollo
import { ContactosPage } from "@/pages/ContactosPage";
import { MensajesPage } from "@/pages/MensajesPage";  
import { EquipoPage } from "@/pages/EquipoPage";

/**
 * SISTEMA DE RUTAS PRINCIPAL - UTalk Frontend
 * 
 * PROP√ìSITO:
 * - Centralizar todas las rutas de la aplicaci√≥n SPA
 * - Manejar autenticaci√≥n y protecci√≥n de rutas
 * - Proporcionar navegaci√≥n robusta con logs detallados
 * - Soporte completo para refresh/deep linking en Vercel
 * 
 * CONFIGURACI√ìN SPA:
 * - vercel.json configurado con rewrites para SPA
 * - vite.config.ts optimizado para build de producci√≥n
 * - React Router maneja navegaci√≥n del lado cliente
 * 
 * ESCALABILIDAD:
 * - F√°cil agregar nuevas rutas y m√≥dulos
 * - Componentes placeholder para desarrollo incremental
 * - Logs exhaustivos para debugging y monitoreo
 */
export function AppRoutes() {
  const location = useLocation();
  
  // Log exhaustivo de navegaci√≥n y cambios de ruta
  useEffect(() => {
    const routeInfo = {
      pathname: location.pathname,
      search: location.search,
      hash: location.hash,
      state: location.state,
      timestamp: new Date().toISOString(),
      userAgent: navigator.userAgent.substring(0, 100) + '...',
      referrer: document.referrer,
      title: document.title
    };

    console.group('üß≠ [NAVIGATION] Cambio de ruta detectado');
    console.info('üìç Informaci√≥n de ruta:', routeInfo);
    console.info('üîó URL completa:', window.location.href);
    console.info('üì± Viewport:', `${window.innerWidth}x${window.innerHeight}`);
    console.groupEnd();

    logger.navigation('üß≠ Navegaci√≥n a nueva ruta', routeInfo);

    // Actualizar t√≠tulo de p√°gina para SEO y UX
    const routeTitles: Record<string, string> = {
      '/': 'UTalk - Dashboard Principal',
      '/login': 'UTalk - Iniciar Sesi√≥n', 
      '/dashboard': 'UTalk - Dashboard Ejecutivo',
      '/campa√±as': 'UTalk - Gesti√≥n de Campa√±as',
      '/contactos': 'UTalk - Gesti√≥n de Contactos',
      '/mensajes': 'UTalk - Chat y Mensajes',
      '/conocimiento': 'UTalk - Base de Conocimiento',
      '/equipo': 'UTalk - Gesti√≥n de Equipo',
      '/configuraci√≥n': 'UTalk - Configuraci√≥n'
    };

    const newTitle = routeTitles[location.pathname] || 'UTalk - Plataforma de Comunicaci√≥n';
    if (document.title !== newTitle) {
      document.title = newTitle;
      logger.navigation('üìÑ T√≠tulo de p√°gina actualizado', { newTitle });
    }
    
  }, [location]);

  // Log de inicializaci√≥n del sistema de rutas
  useEffect(() => {
    logger.navigation('üöÄ [ROUTES] Sistema de rutas inicializado', {
      currentPath: location.pathname,
      totalRoutes: 15, // Actualizar cuando agregues m√°s rutas
      protectedRoutes: 8,
      publicRoutes: 1,
      timestamp: new Date().toISOString(),
      routerVersion: 'React Router v6',
      buildInfo: {
        environment: import.meta.env.MODE,
        version: import.meta.env.VITE_APP_VERSION || '1.0.0'
      }
    });
  }, []);

  return (
    <Routes>
      {/* ===== RUTAS P√öBLICAS ===== */}
      
      {/* 
        RUTA DE LOGIN - Acceso p√∫blico
        - No requiere autenticaci√≥n
        - Redirige a dashboard tras login exitoso
        - Maneja estado de "from" para redirecci√≥n post-login
      */}
      <Route 
        path="/login" 
        element={<Login />} 
      />

      {/* ===== RUTAS PROTEGIDAS ===== */}
      {/*
        TODAS las rutas dentro de RequireAuth requieren autenticaci√≥n
        - Si no hay sesi√≥n v√°lida ‚Üí redirige a /login
        - Si hay sesi√≥n ‚Üí permite acceso y renderiza Outlet
        - Logs detallados de autenticaci√≥n en RequireAuth.tsx
      */}
      <Route element={<RequireAuth />}>
        
        {/* 
          RUTA PRINCIPAL - Dashboard Inbox
          - Landing page tras login
          - Vista principal de mensajes y conversaciones
        */}
        <Route 
          path="/" 
          element={<Index />} 
        />

        {/* 
          DASHBOARD EJECUTIVO - M√©tricas y KPIs
          - Vista ejecutiva con m√©tricas del negocio
          - KPIs, gr√°ficos, alertas en tiempo real
          - Exportaci√≥n de reportes PDF/Excel
        */}
        <Route 
          path="/dashboard" 
          element={
            <div className="h-screen bg-gray-950">
              <ExecutiveDashboard />
            </div>
          } 
        />

        {/* 
          GESTI√ìN DE CAMPA√ëAS - Marketing y comunicaci√≥n masiva
          - Crear, editar, lanzar campa√±as
          - Templates, segmentaci√≥n, analytics
          - Integraci√≥n con WhatsApp Business API
        */}
        <Route 
          path="/campa√±as" 
          element={
            <div className="h-screen bg-gray-950">
              <CampaignModule />
            </div>
          } 
        />

        {/* 
          GESTI√ìN DE CONTACTOS - CRM y base de datos
          - Lista de contactos con filtros avanzados
          - Importaci√≥n CSV, exportaci√≥n, tags
          - Historial de conversaciones por contacto
        */}
        <Route 
          path="/contactos" 
          element={
            <div className="h-screen bg-gray-950">
              <ContactosPage />
            </div>
          } 
        />

        {/* 
          CHAT Y MENSAJER√çA - Conversaciones en tiempo real
          - WhatsApp, Facebook Messenger, SMS, Email
          - Socket.io para tiempo real
          - AI Assistant integrado
        */}
        <Route 
          path="/mensajes" 
          element={
            <div className="h-screen bg-gray-950">
              <MensajesPage />
            </div>
          } 
        />

        {/* 
          BASE DE CONOCIMIENTO - Documentos y FAQs
          - Gesti√≥n de documentos internos
          - FAQs para clientes y agentes
          - Upload de archivos, categorizaci√≥n
        */}
        <Route 
          path="/conocimiento" 
          element={
            <div className="h-screen bg-gray-950">
              <KnowledgeBase />
            </div>
          } 
        />

        {/* 
          GESTI√ìN DE EQUIPO - Usuarios y permisos
          - Lista de agentes y administradores
          - Asignaci√≥n de roles y permisos
          - M√©tricas de performance por agente
        */}
        <Route 
          path="/equipo" 
          element={
            <div className="h-screen bg-gray-950">
              <EquipoPage />
            </div>
          } 
        />

        {/* 
          CONFIGURACI√ìN - Settings del sistema
          - Configuraci√≥n de integrations (WhatsApp, etc.)
          - Settings de usuario, notificaciones
          - Configuraci√≥n de AI y automatizaciones
        */}
        <Route 
          path="/configuraci√≥n" 
          element={
            <div className="h-screen bg-gray-950">
              <SellerSettings />
            </div>
          } 
        />

        {/* ===== RUTAS DE COMPATIBILIDAD (Ingl√©s ‚Üí Espa√±ol) ===== */}
        {/*
          REDIRECCIONES para mantener compatibilidad con URLs en ingl√©s
          - √ötil para links externos, bookmarks, APIs que usen URLs en ingl√©s
          - Replace=true para no agregar a history
        */}
        <Route 
          path="/campaigns" 
          element={<Navigate to="/campa√±as" replace />} 
        />
        <Route 
          path="/contacts" 
          element={<Navigate to="/contactos" replace />} 
        />
        <Route 
          path="/messages" 
          element={<Navigate to="/mensajes" replace />} 
        />
        <Route 
          path="/knowledge" 
          element={<Navigate to="/conocimiento" replace />} 
        />
        <Route 
          path="/team" 
          element={<Navigate to="/equipo" replace />} 
        />
        <Route 
          path="/settings" 
          element={<Navigate to="/configuraci√≥n" replace />} 
        />

        {/* ===== RUTAS ADICIONALES PARA FUTURO ===== */}
        {/*
          RUTAS PREPARADAS para funcionalidades futuras
          - F√°cil activar cuando se implementen
        */}
        <Route 
          path="/reports" 
          element={<Navigate to="/dashboard" replace />} 
        />
        <Route 
          path="/analytics" 
          element={<Navigate to="/dashboard" replace />} 
        />
        <Route 
          path="/integrations" 
          element={<Navigate to="/configuraci√≥n" replace />} 
        />

        {/* ===== RUTA CATCH-ALL ===== */}
        {/* 
          IMPORTANTE: Esta ruta DEBE ir AL FINAL
          - Captura todas las rutas no definidas arriba
          - Muestra p√°gina 404 personalizada
          - Para debugging: logs de rutas no encontradas
        */}
        <Route 
          path="*" 
          element={<NotFound />} 
        />
      </Route>
    </Routes>
  );
}

/**
 * CHECKLIST DE QA - NAVEGACI√ìN SPA
 * 
 * PRUEBAS MANUALES REQUERIDAS:
 * ‚ñ° Navegar a todas las rutas desde la UI
 * ‚ñ° Refrescar (F5) en cada ruta - NO debe dar 404
 * ‚ñ° Deep linking - copiar/pegar URL en nueva pesta√±a  
 * ‚ñ° Login/logout - redirecci√≥n correcta
 * ‚ñ° Rutas protegidas sin sesi√≥n ‚Üí redirige a /login
 * ‚ñ° Rutas de compatibilidad (ingl√©s) ‚Üí redireccionan
 * ‚ñ° Ruta inexistente ‚Üí muestra NotFound
 * ‚ñ° Logs aparecen en consola para cada navegaci√≥n
 * 
 * LOGS ESPERADOS EN CONSOLA:
 * üß≠ [NAVIGATION] Cambio de ruta detectado
 * üöÄ [ROUTES] Sistema de rutas inicializado  
 * üìÑ T√≠tulo de p√°gina actualizado
 * üîê [AUTH] RequireAuth logs (desde RequireAuth.tsx)
 * 
 * COMANDOS DE VERIFICACI√ìN:
 * npm run build    # Debe compilar sin errores
 * npm run preview  # Test local de build de producci√≥n
 * 
 * DESPLIEGUE EN VERCEL:
 * - vercel.json configurado con rewrites SPA
 * - Todas las rutas deben funcionar post-deploy
 * - No debe aparecer p√°gina 404 de Vercel
 */ 